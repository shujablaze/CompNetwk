#include <iostream>
#include <string>

using namespace std;

char grid[5][5];

int found(char element){
    for(int i=0;i<5;++i)
        for(int j=0;j<5;++j){
            if(element == grid[i][j]) return 1;
        }
    return 0;
}


int main(){
    string key,text;
    
    cout << "Enter the text : ";
    cin >> text;
    
    cout << "Enter the key : ";
    cin >> key;
    

    for(int i=1;i<text.length();++i){
        if(text[i-1]==text[i]) text[i] = 'x';
    }
    
    if(text.length() % 2 != 0) text = text + "z";
    
    
    int i = 0;
    int j = 0;
    int index = 0;
    

    while(j < key.length()){
        i=index/5;
        if(found(key[j]) == 0){
                grid[i][index % 5] = key[j];
                ++index;
        }
        ++j;
    }
    

    j=0;
    while(j<=25){
        i=index/5;
        if(found('a' + j) == 0 && 'a'+j != 'j'){
                grid[i][index % 5] = 'a'+j;
                ++index;
        }
        ++j;
    }
    

    int r1{0},c1{0},r2{0},c2{0};
    
    string encrypted = "";

    for(int k=0;k<text.length()-1;k+=2){
        for(int i=0;i<5;++i)
        for(int j=0;j<5;++j){
            if(text[k] == grid[i][j]){
                c1 = j;
                r1= i;
            }
        }
        
        if(text[k+1]=='j') text[k+1] = 'i';
    

    for(int i=0;i<5;++i)
        for(int j=0;j<5;++j){
            if(text[k+1] == grid[i][j]){
                c2 = j;
                r2= i;
            }
        }
        
        if(c1==c2){
            encrypted += grid[(r1+1)%5][c1];
            encrypted += grid[(r2+1)%5][c2];
        }
        else if(r1==r2){
            encrypted += grid[r1][(c1+1)%5];
            encrypted += grid[r1][(c2+1)%5];
        }
        else{
            encrypted += grid[r1][c2];
            encrypted += grid[r2][c1];
        }
    }
    
    cout <<"Encrypted : " <<encrypted << "\n";
    
    char choice;
    

        string dencrypted = "";
    
        for(int k=0;k<encrypted.length()-1;k+=2){
            if(encrypted[k]=='j') encrypted[k] = 'i';
    

    for(int i=0;i<5;++i)
        for(int j=0;j<5;++j){
            if(encrypted[k] == grid[i][j]){
                c1 = j;
                r1= i;
            }
        }
        
        if(encrypted[k+1]=='j') encrypted[k+1] = 'i';
    

    for(int i=0;i<5;++i)
        for(int j=0;j<5;++j){
            if(encrypted[k+1] == grid[i][j]){
                c2 = j;
                r2= i;
            }
        }
        
            if(c1==c2){
                if(r1-1<0)r1=5;
                if(r2-1<0)r2=5;
                dencrypted += grid[(r1-1)%5][c1];
                dencrypted += grid[(r2-1)%5][c2];
            }
            else if(r1==r2){
                if(c1-1<0)c1=5;
                if(c2-1<0)c2=5;
                dencrypted += grid[r1][(c1-1)%5];
                dencrypted += grid[r1][(c2-1)%5];
            }
            else{
                dencrypted += grid[r1][c2];
                dencrypted += grid[r2][c1];
            }
        }
        
    cout<<"Decrypt : "<<dencrypted<<"\n\n";

    return 0;
}

